<?xml version="1.0"?>
<launch>

    <!--launch rviz-->
    <node name="rviz" pkg="rviz" type="rviz" respawn="false" args="-d /home/crazygoon996/Documents/catkin_ws_amcl/src/AMCLRviz.rviz"/>
    <!-- send urdf to param server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find my_robot)/urdf/my_robot.xacro'" />

    <!-- Send fake joint values-->
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="false"/>
    </node> -->

    <!-- World File -->
    <arg name="world_file" default="$(find my_robot)/worlds/reactor_office.world"/>

    <!-- Launch Gazebo World -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="true" />
        <arg name="world_name" value="$(arg world_file)"/>
    </include>

    <!-- Robot pose -->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>
    <arg name="roll" default="0"/>
    <arg name="pitch" default="0"/>
    <arg name="yaw" default="0"/>

    <!-- Find my robot Description-->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find my_robot)/urdf/my_robot.xacro'"/>

    <!-- Spawn My Robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
            args="-urdf -param robot_description -model my_robot 
                -x $(arg x) -y $(arg y) -z $(arg z)
                -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

    <!-- Send robot states to tf -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

    <!-- Map Server -->
    <arg name="map_file" default="$(find my_robot)/maps/reactor_office.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
    
    <!-- AMCL Node -->
    <node name="amcl" pkg="amcl" type="amcl" output="screen">
        <param name="odom_frame_id" value="odom"/>
        <param name="odom_model_type" value="diff-corrected"/>
        <param name="base_frame_id" value="robot_footprint"/>
        <param name="global_frame_id" value="map"/>
        <param name="initial_pose_x" value="0"/>
        <param name="initial_pose_y" value="0"/>
        <param name="max_particles" value="8074"/>
        <param name="update_min_d" value="0.1"/>
        <param name="update_min_a" value="0.3"/>
        <param name="recovery_alpha_slow" value="0.001"/>
        <param name="recovery_alpha_fast" value="0.1"/>
    </node>

    <!-- Move Base -->
    <node name="move_base" pkg="move_base" type="move_base" respawn="false" output="screen">
        <param name="base_global_planner" value="navfn/NavfnROS" />
        <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
        <rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find my_robot)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find my_robot)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find my_robot)/config/base_local_planner_params.yaml" command="load" />
    </node>

</launch>